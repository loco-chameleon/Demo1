// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ps3Hy1AERMbVLKcdR1pRJu
// Component: GEdk8Lr8vba
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: 1TxN0ovUnesq/component
import Button from "../../Button"; // plasmic-import: yz8JGM7N2jcB/component
import SignUpPrompt from "../../SignUpPrompt"; // plasmic-import: gG32NZqUhDMA/component
import Section from "../../Section"; // plasmic-import: 80tS_k8e_tGS/component
import ValueProp from "../../ValueProp"; // plasmic-import: j561t1ZOQvpN/component
import ListItem from "../../ListItem"; // plasmic-import: PSlHxc8XuqsD/component
import PriceCard from "../../PriceCard"; // plasmic-import: rNZinyM_comT/component
import Banner from "../../Banner"; // plasmic-import: 39ommE2PQA9Q/component
import Testimonial from "../../Testimonial"; // plasmic-import: 3sngrvynYuJ0/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: hWEVsUeqUB_a/component
import FooterSection from "../../FooterSection"; // plasmic-import: GV-I2c0_U7sk/component

import { useScreenVariants as useScreenVariantsxXvSosLc8Ca9 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: XXvSOSLc8CA9/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import * as projectcss from "./plasmic_landing_page_starter.module.css"; // plasmic-import: ps3Hy1AERMbVLKcdR1pRJu/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: GEdk8Lr8vba/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: Dk4TBpsW2-IP/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: DUZytg1vIM41/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: Aqt1_TgxGc2_/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: d69pQnRK5tYk/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  signUpPrompt?: p.Flex<typeof SignUpPrompt>;
  valuePropsSection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  logoCloudSection?: p.Flex<typeof Section>;
  testimonialsSection?: p.Flex<typeof Section>;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {
  dataFetches: PlasmicHomepage__Fetches;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  dataFetches?: PlasmicHomepage__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxXvSosLc8Ca9()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Home"}</title>
        <meta key="og:title" property="og:title" content={"Home"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__ixfvy)}
            >
              <div className={classNames(projectcss.all, sty.column__aapGk)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e3O1B)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xzDqP)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__c1Elv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aXCah
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tP9Dz
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Designs that "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {"adapt"}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tnXm2
                      )}
                    >
                      {
                        "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gLlH)}
                  >
                    <Button
                      className={classNames("__wab_instance", sty.button__qecP)}
                      color={"darkGray" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__zhIlf)}
                          role={"img"}
                        />
                      }
                      showEndIcon={"showEndIcon" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d46Gs
                        )}
                      >
                        {"Start now"}
                      </div>
                    </Button>

                    <Button
                      bgDifference={"bgDifference" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.button__nfN5Y
                      )}
                      color={"darkGray" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eeK2
                        )}
                      >
                        {"Learn moreâ€¦"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__uxEDp)}>
                <SignUpPrompt
                  data-plasmic-name={"signUpPrompt"}
                  data-plasmic-override={overrides.signUpPrompt}
                  className={classNames("__wab_instance", sty.signUpPrompt)}
                />
              </div>
            </p.Stack>
          </p.Stack>

          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lxLtZ)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___6U9Fo)}>
                <h2
                  className={classNames(
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__rziwa
                  )}
                >
                  {"Proposing values"}
                </h2>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ifdyw
                )}
              >
                {
                  "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__i1O3J)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___0DpU)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__e8Xkh)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__cQePz)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__zCbGy)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__y915)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__mqwLg)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__uqx1R)}
                      role={"img"}
                    />
                  }
                  title={"Best and brightest"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__qwa2G)}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__n67Vl)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cQ1ZI
                      )}
                    >
                      {"Dynamic range"}
                    </div>
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pe4H0)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__p7Tna)}
                  description={
                    "Commodo pretium himenaeos nisi potenti ad in ante."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__dcgzi)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lwAsG
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__nWwcM)}
                  description={
                    "Magna ullamcorper ut arcu nisi a per facilisis."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__rpWa3)}
                      role={"img"}
                    />
                  }
                  title={"Production-ready"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__eEww)}
                  description={
                    "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__g0N8C)}
                      role={"img"}
                    />
                  }
                  title={"Magical"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__obr7)}
                  description={
                    "A parturient mi suspendisse nisl inceptos nullam a."
                  }
                  flatIcon={"flatIcon" as const}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__n7TAj)}
                      role={"img"}
                    />
                  }
                  title={"Accessible"}
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___7Gcc9)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("features" as const)
                  : ("features" as const)
              }
            >
              <div className={classNames(projectcss.all, sty.column__fu7Gv)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__z0Uej)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__imMik
                    )}
                  >
                    {"Freedoms"}
                  </div>

                  <h2
                    className={classNames(
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__vJyzW
                    )}
                  >
                    {"Open by design"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ipBfJ
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__lkMt)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__fnBqW)}
                        role={"img"}
                      />
                    }
                    flat={"flat" as const}
                    showEndIcon={"showEndIcon" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mvZfs
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__ldUne)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___90MGp)}
                >
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("dark" as const)
                        : ("dark" as const)
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__vox9E
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__v3NFi)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bqudf
                      )}
                    >
                      {"Built on capability"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__r3KjK
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg___8ATnz)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jpS
                      )}
                    >
                      {"Highly energetic"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames("__wab_instance", sty.listItem__fKs3)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__bKcDe)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qAxU
                      )}
                    >
                      {"100% transparency and accountability"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames("__wab_instance", sty.listItem__dF7M)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__dfJej)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___34Zlm
                      )}
                    >
                      {"Refreshing clarity"}
                    </div>
                  </ListItem>

                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___3BaAs
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__gRfzX)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2IQiv
                      )}
                    >
                      {"Modern results"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uFygm)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__glPbS)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___7QbgA)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sKjXf
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___38PQv
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___81X53)}
              >
                <div className={classNames(projectcss.all, sty.column__hzMi2)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Ul3S
                    )}
                  >
                    {"Starter"}
                  </div>

                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatRight"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__qxXcl
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__zpZ4Q
                          )}
                          description={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zoGnG
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kPzH
                          )}
                          description={"Mus consequat a justo"}
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cr4Sd
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />
                      </React.Fragment>
                    }
                    label={null}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__islet)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t0Opa
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    }
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___5A2O
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gTjgh
                          )}
                          description={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sifQu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hqdQz
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__retFk
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mlpIf
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__uihzp
                          )}
                          description={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3YJp
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___4Kke7
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__b3KYz
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jVaWj
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={"PRO"}
                    primary={"primary" as const}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__tdFjY)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xiKy4
                        )}
                      >
                        {"Buy team"}
                      </div>
                    }
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__rSwzg
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__repd7
                          )}
                          description={"Ad nam curae a potenti platea"}
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__i9R73
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__hj66Y
                          )}
                          description={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          flatIcon={"flatIcon" as const}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nQff
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={"noTitle" as const}
                        />
                      </React.Fragment>
                    }
                    dollars={"10"}
                    label={"Team"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nM5Tz)}
            >
              <Banner
                className={classNames("__wab_instance", sty.banner___2GXrV)}
                image={{
                  src: "/plasmic/landing_page_starter/images/sunglassesMale.jpeg",
                  fullWidth: 2851,
                  fullHeight: 1900,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lhkdn
                      )}
                    >
                      {"Sunglasses Collection"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s8SRz
                      )}
                    >
                      {"Get 25% off on selected items"}
                    </div>

                    <Button
                      color={"link" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__kVqAc)}
                          role={"img"}
                        />
                      }
                      flat={"flat" as const}
                      showEndIcon={"showEndIcon" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__s7Yn
                        )}
                      >
                        {"Go to collection"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lMBn)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__ndIph)}
                  image={{
                    src: "/plasmic/landing_page_starter/images/sneakers.jpeg",
                    fullWidth: 2850,
                    fullHeight: 1900,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wr0Gs
                        )}
                      >
                        {"Sneakers\nCollection"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nlIEr
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ihQE
                            )}
                            role={"img"}
                          />
                        }
                        flat={"flat" as const}
                        showEndIcon={"showEndIcon" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iCxBp
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__bGxte)}
                  image={{
                    src: "/plasmic/landing_page_starter/images/shirtWoman.png",
                    fullWidth: 1834,
                    fullHeight: 2751,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wqpVj
                        )}
                      >
                        {"Shirts\nCollection"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__da8MN
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hg2WJ
                            )}
                            role={"img"}
                          />
                        }
                        flat={"flat" as const}
                        showEndIcon={"showEndIcon" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fhc6I
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"logoCloudSection"}
            data-plasmic-override={overrides.logoCloudSection}
            className={classNames("__wab_instance", sty.logoCloudSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cr4HZ)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__yFwBn)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/landing_page_starter/images/loom.svg",
                  fullWidth: 300,
                  fullHeight: 91,
                  aspectRatio: 3.303226
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__as7L5)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/landing_page_starter/images/strapi.svg",
                  fullWidth: 300,
                  fullHeight: 78,
                  aspectRatio: 3.849624
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__vdZPi)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/landing_page_starter/images/segment.svg",
                  fullWidth: 300,
                  fullHeight: 62,
                  aspectRatio: 4.87619
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___8NgXf)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/landing_page_starter/images/xstate.svg",
                  fullWidth: 300,
                  fullHeight: 94,
                  aspectRatio: 3.2
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fxNp5)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: "/plasmic/landing_page_starter/images/mapbox.svg",
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.491228
                }}
              />
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray" as const}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___7Q2By)}
            >
              <div className={classNames(projectcss.all, sty.column__qZnhk)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__z61DO
                  )}
                  image={{
                    src: "/plasmic/landing_page_starter/images/tracy.png",
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__xM5Ds)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__tLnP
                  )}
                  image={{
                    src: "/plasmic/landing_page_starter/images/elaine.png",
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Elaine Benes"}
                  quote={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eUqph
                        )}
                      >
                        {'"Vestibulum lacinia varius habitant dis aenean.'}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p1R50
                        )}
                      >
                        {
                          'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                        }
                      </div>
                    </React.Fragment>
                  }
                  title={"Editor, Pendant Publishing"}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__dKkxf)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__pddVf
                  )}
                  image={{
                    src: "/plasmic/landing_page_starter/images/louis.jpeg",
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Louis Huang"}
                  quote={
                    '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uGpEj
                      )}
                    >
                      {"Restaurant Owner, Cattleman's Ranch"}
                    </div>
                  }
                />
              </div>
            </p.Stack>
          </Section>

          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: "/plasmic/landing_page_starter/images/meeting.jpeg",
              fullWidth: 2916,
              fullHeight: 1787,
              aspectRatio: undefined
            }}
          />

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "signUpPrompt",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "signUpPrompt"],
  navbar: ["navbar"],
  signUpPrompt: ["signUpPrompt"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  signUpPrompt: typeof SignUpPrompt;
  valuePropsSection: typeof Section;
  checkpointsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHomepage__Fetches;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    signUpPrompt: makeNodeComponent("signUpPrompt"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
